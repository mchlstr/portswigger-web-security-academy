What is a server?
https://www.youtube.com/watch?v=UjCDWCeHCzY&t=209s


What is Server OS?
- Linux
- Windows Server
- Hypervisor - 1
    - VMWare in datacenters i6A free, but most of them are licensed
    - ProxMods - According to Christian, it is a great automation
    - TrueNAS "worry-free solution" with no advanced virtualization capabilities

https://www.youtube.com/watch?v=xWz_-gyv3j4

How server can have more "servers" on them?

Is the "Web Server", "Mail Server", or "Database Server" just some applet?

What is the difference between a website and a web application?
--------------------------
Authentication vulns
---------------------------
How does password-based authentication work? Communication between web applications and servers behind.

Why can brute force attacks happen?
What technique can an attacker deploy to increase the efficiency of "educated guess" in brute-force attacks?

How does remote IP detection work?

Account locking? How it work? How to set an automation workflow.

Is it possible to cause a denial of service with the account lock mechanism? How serious that would be?

What is credentials stuffing?
Where to find stolen usernames and passwords?

What is the Rate Limit?
How does CAPTCHA work? What are methods to avoid captcha?
What are the different forms of CAPTCHA?
When CAPTCHA becomes annoying?

How do you unlock locked users?

What is HTTP Basic Authentication? Is it still used? What examples can be found about it?
What things is it vulnerable to?

Single-factor authentication, what is it? Why is it still used?

What is multifactor authentication?
What are the different types of multifactor authentication?
Most common types of 2FA (two-factor authentication).
What is an out-of-band physical device? Examples

Why is there such a diss about email-based 2FA? Is it because both are password protected, and the user may use the same password on multiple accounts? Therefore, if the attacker obtains one, then it is game over.

Find an example of a high-security website that requires a physical device to log in. What is an RSA token?
How is a dedicated device used to access online banking? My bank has something like that. However, they, for some reason, make it easier to brute-force now just by putting a 4-digit pin on the website, which defeats the purpose of everything they have done before.

Is there some study of users complaining when it is "over secure" and the "institution is over exaggerating risks"?

SMS code transmission. How do I obtain the SMS code from the 2FA? I remember guys mentioning that somebody hacked the cellphone provider to get the SMS in transit to get into the SMS code to bypass the 2FA. What other methods there can be?
What is Sim swapping, and is it still a thing?

What are typical mis-implementation of two-factor authentication?
Broken logic and the application need to adequately verify the same user is completing the second step or that it is logged in before the second step.

Implementation of change of passwords, forgotten passwords, and keeping me logged in. Why this can be troublesome?

Cookie to bypass the login process. What are the common patterns?

Open source frameworks and documentation. Security cookies are well documented in how the process works. Can you find an example of this?

How do we establish that it is a real person/user resetting passwords?

Resetting passwords using a URL. Why is it the more robust system?

Password reset poisoning. Fancy name, but for what it stands?

Change password bruteforce? Is it possible to change the password without being logged in? Can you find examples of this flawed way of password-change?

-----------------------
Directory traversal
-----------------------

Where can everywhere be an entry point for path traversal?
I just saw a possibility to get the URL which needs to be fetched from the <img src="/loadImage?filename=218.png">

What are the defenses against the path traversal?

Do the programming frameworks automatically suggest sanitation of the path traversal techniques, or is it based on the developer's will and knowledge to implement?

Is CDN and Web Firewall enough for mitigation of this?

How the Web Firewall and Akamai work. Based on the signature of "payload," they block the request or IP? What is the process?

Preventions of directory traversal. How to?

What is Filesystem API?

------------------------------------
Command Injection
------------------------------------

Is there some universal hosting infrastructure behind the web server?

What is the common setup?

What does mean a "trusting relationship" between components of the infrastructure?

Does command injection only influence "legacy systems"? What is still considered a legacy system?

For example, in the BUP academy, the author assumes knowledge of the code behind it. Is there a way to discover this, or is it just possible through code inspection and white hat testing?

What exactly is Blind OS injection? The guy mentions something about some commands that respond in different ways. They echo anything that is reflected directly on the site. Are there some distribution/server-specific methods for this? If yes, what are they? How they are implemented?

What different techniques are there to exploit the command injection?

--------------------
Business logic
--------------------
If business logic defines how the application works, how do we create a list of how the application works?

Is there some training that illustrates how the apps work?

It would be fun to have a list of things for each functionality which "doesnt make sense" for that functionality.

If the Business loginc flaws are unique to application, how do you approach fto find them?

It said different functions can be combined in unexpectd way. What way?

---------------------------
Information Disclosure
--------------------------

What are the basics forms the application leaks the information to the attacker/user? How to differentiate if the information is really sensitive or not?

How disclosure of technical information can be serious and sensitive?

ThatThis means carefully studying the website responses in order to leak information

Automating the common sources or information disclosure comparing it to some SECRETS list. I think I have seen the tools that are specifically for that design.

What exactly is configured to automatically list the contents of directories that do not have an index page present? How does this work?

Error messages in the applications. Informtion disclosure, way t leverage, swl injection, user enumeraton, etc. What else?

What is debugging functionality?

How it represents itself on the page when it is turned on? Is it possible to reliably detect the presence of debugging turned on, or is it just guesswork based on some input in some functionality, which is discovered by chance?

So information disclosure is linked to the Insecure Direct object Reference and Access Control vulnerabilities. Which one is more dangerous, and how would you report it? As IDOR and information disclosure as business flaw? As what? Privilege escalation/lateral movement/account takeover if possible?

What are the techniques to achieve a source code disclosure if we do not have direct access to the application? Meaning it is not open source, nor is it source code testing?

What is the TRACE HTTP Method? I have never heard about it, but it looks like it can bypass some behavioral

What are harmless misconfiguratons which are common while integrating 3rd party software? What is the most commonly used 3rd party software?

Add searching for /.git into the automation process, and if found, just download the entire .git directory locally. Shit, this is cool as fuck. I know you can do it with open source thing in github, but I did not know that you can do this with projects which are miscovfigured and basically get access to things.

How to browse comments for information and secrets? Is there some tool for that? This sounds awesome, but like digging for dust. Prob most people covered it, but it is still possible to find additional things even if somebody already reported the existence of the folder. If it is not taken down and it contains some more gold inside, that would be the key. Instead of just having maybe it will show some of the gro of the application.

Btw what are the most common languages applications are written in?

--------------------------
Access Control
-------------------------

Does access control vulns relate to logic flaws. It looks that way, especially when discussing both vertical and horizontal access control, and if it is somehow misconfigured, then it is better. This way is, as I heard many times, Li talking about having access to roles to try to perform what actions one user can do and if it is possible to replicate with different users who have different privileges or access to different functions in the code.

But how to test for this? To create one or two accounts, if it is possible to create? From perspective when I cannot create an priviledge account to study things, is it possible to somehow guess it what should be possible? Just by some documentation if available?

But what are some common functions which just admin has and nobody else should?

How the principle of least privilege applied to applications and common misconfigurations. Is it misconfiguration, or is it a code implementation problem?

I heard the term security via obscurity many times, but I did not see many examples. What are the examples of security thru obscurity?

What are user controllable locations? Is there some wordlist of user controlable locations of hidden fields, cookies, or parameters which indicate that it controls the access to application or different features?

What is a non-standard HTTP header, and how it can be used to override URLs? Sounds cool as fuck.

It looks like the case sensitivity is a case. URL matching in frameork specific scenarios can result into discrepancy.

Horizontal privilege escalation might be a  simple odor. Of IDOR is subcategory.

What are the ways to investigate the access control? I mean step b step how it is implemented?

Which headers are vulnerable to access control and why?

Is it possible to IDOR guess the ID or access to static files? How do you differentiate if it is vulnerable or not and if it is a public file or not? What if it looks like it is a "private file", but it is publicly available on purpose? How to differentiate between them?

------------------------------
File Upload Vulnerabilities
------------------------------

Upload function. Upload Avatar, upload file, upload pdf, upload whatever to the server to convert, store, etc. They need to read those content. Upload svg.

I heard that you could embed a payload inside the SVG because it is vector graphics. No clue how that works. It would be fun to find it.

It would be cool to have a folder prepared with things for file upload vulnerabilities which are basically testing the validation things like names, type, contents, and size. And see how the server responds. It sounds like hilarious challenge and have things in one folder.

What other things are to be checked for aside from this thing mentioned? And how to do those things harmlessly? In BB or testing, we do not want to just cause harm to the user and application or application owners, but at the same time, man, you cannot be too gentle sometimes because that might lead to just getting blocked.

Combinatin of vulnerabilites. What vulnerabilities chain together? Example path traversal to upload to any location.

Parsing. How many different types of parking there is? IT is OS specific? Language specific? Framework specific?

BEhaviour of files based on ectensions, file types, MIME and server configurations. This means that different servers cts differently and can be configured differently.

Chaining file upload and remote command execution.

What peculiar things can be in multipart/form data?

List of alternative extensions for any file type which can be substituted to be executed. Same workd with obfuscation, capitalication, cammelcase, URL endoding, doble extensions and others. What else is there? What are the language-specific obfuscation methods? How do different languages and frameworks parse this?

What is a race condition, and how do you spot one?

Using different methods on the server asite of POST OR GET, such as PUT

-----------------------
Race Conditions
----------------------

What is network jitter?

What are the differences between HTTP 1 and HTTP 2? Which is used more now? Do they have the same vulnerabilities? It is possible to use both of them in the same

What is server-side jitter?

How to evaluate if the endpoint is critical?
How to establish if there is a possibility for collision?

How does network architecture influence the application?
What is network architecture?
How it look like?

What the heck is connection warming? It sounds like as if the athlete is warming his limbs before run, or hockey payers try to get some goals before actual game, so they are already warmed up and the muscless are not stiff. Does the network work the same way?


Passing arrays and non-string values in nonstandard syntax to frameworks and languages. How does this work, and why is it important?

---------------------
SSRF
--------------------

I find it interesting that it is is possible to force the server to request you. Why does the server even makes this request?

What are other back-end systems application communicate with?

Do all applications use API?
How does API work?
Why they use API?

What is disaster recovery for the system?

Types of trusting relationships in server?

Make a list of alternative version of representing an IP such s 127.0.0.1

Defeating the SSRF protection with parsing

Chaining, the vulnerabilities, and Open redirect chained with the SSRF. This way is the "useless" vuln, often Open REdirect chained with higher impact vuln as SSRF.

Chaining vulns SSRF via XXE (XML external entity (XXE) injection)? How does it work?

----------------------------------------
XXE - XML External entity injection
-----------------------------------------


What the fuck is XML? I met it when I was having classes, but nothing concrete, only as somehow a way to structure the web page.

Which application uses storing data in XML? And why is it used? Why is it more vulnerable when there is more data than a small amount?

One thing I do not understand is why nearly every vulnerability can have a "blind" side. This XXE, SSRF, XXS, and SQL are among the few mentioned as they have a "blind side". But how do you know if it is there or not, if it is blind? You do not have any return, so maybe it was there like XSS, but it got just blindly stored somewhere, and you have no clue because it did not pop or anything. Like How do you know?

And now is the new thing. Finding hidden attack surface for vuln, which does not have even a hint of the XML used, but it is XML External entity injection? XD OMG, this world is just one substantial creative mess hahahaha

Again, SVG can be used with XXS and XXE. What other attacks can be rammed into svg?

Chaining XXE with SQL injection or XXS? How does this work? How to chain the vulns?

---------------
XSS
-----------------
Make a list of DOM-based sinks and query for them one by one.
